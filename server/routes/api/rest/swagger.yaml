swagger: "2.0"
info:
  description: "Office Supply Store Api"
  version: "1.0.0"
  title: "Swagger Supply Store"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@mypetstore.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "supplystore.swagger.io"
basePath: "aspi/rest/"
tags:
- name: "items"
  description: "Everything about your our items"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "orders"
  description: "Access to supply store orders"
schemes:
- "https"
- "http"
paths:
  /items:
    get:
        tags:
        - "items"
        summary: "Find item by ID"
        description: "Returns an items collection"
        operationId: "getItemById"
        produces:
        - "application/json"
        responses:
          200:
            description: "successful operation"
            schema:
              $ref: "#/definitions/Items"
          400:
            description: "Invalid ID supplied"
          404:
            description: "Item not found"
        security:
        - api_key: []
    post:
      tags:
      - "items"
      summary: "Add a new intem to the store inventory"
      description: ""
      operationId: "addItem"
      consumes:
      - "application/json"
      produces:
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Item object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Item"
      responses:
        405:
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:items"
        - "read:items"
  /items/{itemId}:
    get:
      tags:
      - "items"
      summary: "Find item by ID"
      description: "Returns a single item"
      operationId: "getItemById"
      produces:
      - "application/json"
      parameters:
      - name: "itemId"
        in: "path"
        description: "ID of item to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Item"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Item not found"
      security:
      - api_key: []
    delete:
      tags:
      - "items"
      summary: "Deletes an item"
      description: ""
      operationId: "deleteItem"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "petId"
        in: "path"
        description: "Item id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Item not found"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
    put:
      tags:
      - "items"
      summary: "Update an existing item"
      description: ""
      operationId: "updateItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "itemId"
        description: "Id for item to upate"
        required: true,
      - in: "body"
        name: "body"
        description: "Item object that needs to be updated in the store"
        required: true
        schema:
          $ref: "#/definitions/Item"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Item not found"
        405:
          description: "Validation exception"
      security:
      - petstore_auth:
        - "write:items"
        - "read:items"
  /orders:
    post:
      tags:
      - "orders"
      summary: "Place an order for an item"
      description: ""
      operationId: "placeOrder"
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "order placed for purchasing the pet"
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        400:
          description: "Invalid Order"
  /orders/{orderId}:
    get:
      tags:
      - "orders"
      summary: "Find purchase order by ID"
      description: "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions"
      operationId: "getOrderById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: "ID of pet that needs to be fetched"
        required: true
        type: "integer"
        maximum: 10.0
        minimum: 1.0
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Order not found"
    delete:
      tags:
      - "orders"
      summary: "Delete purchase order by ID"
      description: "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors"
      operationId: "deleteOrder"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: "ID of the order that needs to be deleted"
        required: true
        type: "integer"
        minimum: 1.0
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Order not found"
 
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Item:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Pet"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"